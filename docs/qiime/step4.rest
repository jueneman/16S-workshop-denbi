Amplicon Sequence Varaints (ASVs) 
---------------------------------

DADA2 is a pipeline for detecting and correcting (where possible) Illumina amplicon sequence data.
As implemented in the q2-dada2 plugin, this quality control process will additionally filter any phiX
reads (commonly present in marker gene Illumina sequence data) that are identified in the sequencing data,
and will filter chimeric sequences.

As such, we will use dada2 on our HQ reads, which are alreay PE-assembled and trimmed of the amplification primer,
so for qiime this is single-end data.

The dada2 denoise-single method requires two parameters that are used in quality filtering:
--p-trim-left m, which trims off the first m bases of each sequence, and --p-trunc-len n which
truncates each sequence at position n. This allows the user to remove low quality regions of the sequences.
To determine what values to pass for these two parameters, you should review the Interactive Quality Plot
tab in the demux.qzv file that was generated by qiime demux summarize in step1::
  
  
  qiime dada2 denoise-single \
  --i-demultiplexed-seqs bga_joined_demux.qza \
  --p-trim-left 0 \
  --p-trunc-len 435 \
  --o-representative-sequences rep-seqs-dada2.qza \
  --o-table table-dada2.qza \
  --o-denoising-stats stats-dada2.qza \
  --p-n-threads 14 \
  --verbose
  
 
Taxonomically Classify OTUs and ASVs
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Finally, we will explore the taxonomic composition of the samples. The first step in this process is to assign taxonomy to the sequences in our FeatureData[Sequence] QIIME 2 artifact.

Usually, taxonomic classifiers perform best when they are trained based on your specific sample preparation and sequencing parameters, including the primers that were used for amplification and the length of your sequence reads.

Two elements are required for training the classifier: the reference sequences and the corresponding taxonomic classifications::

  cd ~/workdir/qiime
  ls -la ../16Sdatabase/

Weâ€™ll train a Naive Bayes classifier on the Silva v132 99% OTUs, where we trim the data to only include those ~450 bases from the region of the 16S that was sequenced in this analysis (the V3/V4 region).

First, we import these data into QIIME 2 Artifacts. Since the reference taxonomy file is a tab-separated (TSV) file without a header, we must specify HeaderlessTSVTaxonomyFormat as the source format since the default source format requires a header::

  qiime tools import \
    --type 'FeatureData[Sequence]' \
    --input-path ~/workdir/16Sdatabase/silva_132_99_16S.fna \
    --output-path silva_132_99_16S.qza

  qiime tools import \
    --type 'FeatureData[Taxonomy]' \
    --input-format HeaderlessTSVTaxonomyFormat \
    --input-path ~/workdir/16Sdatabase/consensus_taxonomy_all_levels.txt \
    --output-path silva_taxonomy.qza


Now, we extract only the target region from that reference::

qiime feature-classifier extract-reads \
  --i-sequences silva_132_99_16S.qza \
  --p-f-primer CTACGGGNGGCWGCAG \
  --p-r-primer GACTACHVGGGTATCTAATCC \  
  --p-min-length 100 \
  --p-max-length 600 \
  --o-reads silva_132_99_16S_V3V4.qza



  qiime feature-classifier classify-sklearn \
  --i-classifier silva-132-99-515-806-nb-classifier.qza  \
  --i-reads bga_oref_seqs.qza \
  --o-classification bga_oref_seqs_taxonomy.qza \
  --verbose

  qiime feature-classifier classify-sklearn \
  --i-classifier silva-132-99-515-806-nb-classifier.qza  \
  --i-reads rep-seqs-dada2.qza \
  --o-classification rep-seqs-dada2-taxonomy.qza \
  --verbose

  
